var EmberParseAdapter={};EmberParseAdapter.Transforms={},EmberParseAdapter.Serializer=DS.RESTSerializer.extend({primaryKey:"objectId",extractArray:function(e,t,r){var a={};return a[Ember.String.pluralize(t.typeKey)]=r.results,this._super(e,t,a)},extractSingle:function(e,t,r,a){var n={};return n[t.typeKey]=r,this._super(e,t,n,a)},typeForRoot:function(e){return Ember.String.dasherize(Ember.String.singularize(e))},extract:function(e,t,r,a,n){return null===a||"updateRecord"!==n&&"deleteRecord"!==n||(r[this.get("primaryKey")]=a),this._super(e,t,r,a,n)},extractMeta:function(e,t,r){r&&r.count&&(e.metaForType(t,{count:r.count}),delete r.count)},normalizeAttributes:function(e,t){e.eachAttribute(function(e,r){"date"===r.type&&"object"===Ember.typeOf(t[e])&&t[e].iso&&(t[e]=t[e].iso)}),this._super(e,t)},normalizeRelationships:function(e,t){var r=this.get("store"),a=this;e.eachRelationship(function(e,n){var i=n.options;t[e]&&"belongsTo"===n.kind&&(t[e]=t[e].objectId),t[e]&&"hasMany"===n.kind&&(i.relation&&(t.links={},t.links[e]={type:n.type,key:e}),i.array&&t[e].length&&t[e]&&t[e].forEach(function(e,t,i){"Pointer"===e.__type?i[t]=e.objectId:(delete e.__type,delete e.className,e.id=e.objectId,delete e.objectId,e.type=n.type,a.normalizeAttributes(n.type,e),a.normalizeRelationships(n.type,e),r.push(n.type,e))}))},this),this._super(e,t)},serializeIntoHash:function(e,t,r,a){Ember.merge(e,this.serialize(r,a))},serializeAttribute:function(e,t,r,a){"createdAt"===r||"updatedAt"===r||"emailVerified"===r||"sessionToken"===r?delete t[r]:this._super(e,t,r,a)},serializeBelongsTo:function(e,t,r){var a=r.key,n=e.get(a);if(n){if(n instanceof DS.PromiseObject){if(!n.get("isFulfilled"))throw Error("belongsTo values *must* be fulfilled before attempting to serialize them");n=n.get("content")}t[a]={__type:"Pointer",className:this.parseClassName(n.constructor.typeKey),objectId:n.get("id")}}},parseClassName:function(e){return"parseUser"===e?"_User":Ember.String.capitalize(Ember.String.camelize(e))},serializeHasMany:function(e,t,r){var a=r.key,n=e.get(a),i=r.options;if(n&&n.get("length")>0){t[a]={objects:[]},i.relation&&(t[a].__op="AddRelation"),i.array&&(t[a].__op="AddUnique");var s=this;if(n.forEach(function(e){t[a].objects.push({__type:"Pointer",className:s.parseClassName(e.constructor.typeKey),objectId:e.get("id")})}),n._deletedItems&&n._deletedItems.length){if(i.relation){var o=t[a],u={__op:"RemoveRelation",objects:[]};n._deletedItems.forEach(function(e){u.objects.push({__type:"Pointer",className:e.type,objectId:e.id})}),t[a]={__op:"Batch",ops:[o,u]}}i.array&&(t[a].deleteds={__op:"Remove",objects:[]},n._deletedItems.forEach(function(e){t[a].deleteds.objects.push({__type:"Pointer",className:e.type,objectId:e.id})}))}}else t[a]=[]}}),EmberParseAdapter.Adapter=DS.RESTAdapter.extend({defaultSerializer:"-parse",init:function(){this._super(),this.set("headers",{"X-Parse-Application-Id":this.get("applicationId"),"X-Parse-REST-API-Key":this.get("restApiId")})},host:"https://api.parse.com",namespace:"1",classesPath:"classes",pathForType:function(e){return"parseUser"===e?"users":"login"===e?"login":this.classesPath+"/"+this.parsePathForType(e)},parsePathForType:function(e){return Ember.String.capitalize(Ember.String.camelize(e))},createRecord:function(e,t,r){var a={},n=e.serializerFor(t.typeKey);n.serializeIntoHash(a,t,r,{includeId:!0});var i=this;return new Ember.RSVP.Promise(function(e,r){i.ajax(i.buildURL(t.typeKey),"POST",{data:a}).then(function(t){var r=Ember.merge(a,t);e(r)},function(e){r(e.responseJSON)})})},updateRecord:function(e,t,r){var a={},n={},i=!1,s=e.serializerFor(t.typeKey);s.serializeIntoHash(a,t,r);var o=r.get("id"),u=this;return t.eachRelationship(function(e){a[e]&&a[e].deleteds&&(n[e]=a[e].deleteds,delete a[e].deleteds,i=!0)}),new Ember.RSVP.Promise(function(e,r){i?u.ajax(u.buildURL(t.typeKey,o),"PUT",{data:n}).then(function(){u.ajax(u.buildURL(t.typeKey,o),"PUT",{data:a}).then(function(t){var r=Ember.merge(a,t);e(r)},function(e){r("Failed to save parent in relation: "+e.response.JSON)})},function(e){r(e.responseJSON)}):u.ajax(u.buildURL(t.typeKey,o),"PUT",{data:a}).then(function(t){var r=Ember.merge(a,t);e(r)},function(e){r(e.responseJSON)})})},parseClassName:function(e){return"parseUser"===e?"_User":Ember.String.capitalize(Ember.String.camelize(e))},findHasMany:function(e,t,r){var a={where:{$relatedTo:{object:{__type:"Pointer",className:this.parseClassName(t.typeKey||t.constructor.typeKey),objectId:t.get("id")},key:r.key}}};return this.ajax(this.buildURL(r.type.typeKey),"GET",{data:a})},findQuery:function(e,t,r){return r.where&&"string"!==Ember.typeOf(r.where)&&(r.where=JSON.stringify(r.where)),this._super(e,t,r)},sessionToken:Ember.computed("headers.X-Parse-Session-Token",function(e,t){return 2>arguments.length?this.get("headers.X-Parse-Session-Token"):(this.set("headers.X-Parse-Session-Token",t),t)})}),EmberParseAdapter.ParseUser=DS.Model.extend({username:DS.attr("string"),password:DS.attr("string"),email:DS.attr("string"),emailVerified:DS.attr("boolean"),sessionToken:DS.attr("string"),createdAt:DS.attr("date"),updatedAt:DS.attr("date")}),EmberParseAdapter.ParseUser.reopenClass({requestPasswordReset:function(e){var t=this.get("store").adapterFor(this),r={email:e};return t.ajax(t.buildURL("requestPasswordReset"),"POST",{data:r})["catch"](function(e){return Ember.RSVP.reject(e.responseJSON)})},login:function(e,t){if(Ember.isEmpty(this.typeKey))throw Error("Parse login must be called on a model fetched via store.modelFor");var r=this,a=e.adapterFor(r),n=e.serializerFor(r);return a.ajax(a.buildURL("login"),"GET",{data:t}).then(function(t){n.normalize(r,t);var a=e.push(r,t);return a},function(e){return Ember.RSVP.reject(e.responseJSON)})},signup:function(e,t){if(Ember.isEmpty(this.typeKey))throw Error("Parse signup must be called on a model fetched via store.modelFor");var r=this,a=e.adapterFor(r),n=e.serializerFor(r);return a.ajax(a.buildURL(r.typeKey),"POST",{data:t}).then(function(a){n.normalize(r,a),a.email=a.email||t.email,a.username=a.username||t.username;var i=e.push(r,a);return i},function(e){return Ember.RSVP.reject(e.responseJSON)})}}),EmberParseAdapter.GeoPoint=Ember.Object.extend({latitude:Ember.computed(function(){return this._latitude}).readOnly(),longitude:Ember.computed(function(){return this._longitude}).readOnly(),init:function(e,t){this._latitude=e,this._longitude=t}}),EmberParseAdapter.File=Ember.Object.extend({name:Ember.computed(function(){return this._name}).readOnly(),url:Ember.computed(function(){return this._url}).readOnly(),init:function(e,t){this._name=e,this._url=t}}),EmberParseAdapter.Transforms.GeoPoint=DS.Transform.extend({deserialize:function(e){return e?new EmberParseAdapter.GeoPoint(e.latitude,e.longitude):null},serialize:function(e){return e?{__type:"GeoPoint",latitude:e.get("latitude"),longitude:e.get("longitude")}:null}}),EmberParseAdapter.Transforms.File=DS.Transform.extend({deserialize:function(e){return e?new EmberParseAdapter.File(e.name,e.url):null},serialize:function(e){return e?{__type:"File",name:e.get("name"),url:e.get("url")}:null}}),EmberParseAdapter.Transforms.Date=DS.Transform.extend({deserialize:function(e){return e?new Date(e.iso):null},serialize:function(e){return e?{__type:"Date",iso:e.toISOString()}:null}}),EmberParseAdapter.setupContainer=function(e){e.register("adapter:-parse",EmberParseAdapter.Adapter),e.register("serializer:-parse",EmberParseAdapter.Serializer),e.register("model:parse-user",EmberParseAdapter.ParseUser),e.register("transform:parse-geo-point",EmberParseAdapter.Transforms.GeoPoint),e.register("transform:parse-file",EmberParseAdapter.Transforms.File),e.register("transform:parse-date",EmberParseAdapter.Transforms.Date)},Ember.onLoad("Ember.Application",function(e){e.initializer({after:"ember-data",name:"parse-adapter",initialize:function(e){EmberParseAdapter.setupContainer(e)}})});